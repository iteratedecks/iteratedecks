# Where our sources are
repository ../../src

CXXFLAGS+= --std=c++11

$(phony CLI): ${RELEASE_BINARY_CLI} XML PACKAGE
$(phony LIB): ${RELEASE_LIBRARY} XML

${RELEASE_BINARY_CLI}: $(infer_objects CLI2/iteratedecks-cli.o, CLI2/*.o CORE/*.o)
    ${CXX} ${inputs} ${LDFLAGS} ${LDLIBS} ${LIBS} -o ${output}

${RELEASE_LIBRARY}: $(wildcard CORE/*.o)
    rm -f ${output}
    ${AR} crvs ${output} ${inputs}

${UNIT_TEST_BINARY}: $(wildcard UNIT_TESTS/*.o) ${RELEASE_LIBRARY}
    ${CXX} \
    $(wildcard UNIT_TESTS/*.o) \
    ${LDFLAGS} \
    -l${RELEASE_LIBRARY_SHORT} -L. \
    -lboost_unit_test_framework \
    -o ${output}

makepp_percent_subdirs=1
%.o: %.cpp
    $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $(input) -o $(output)

$(phony PACKAGE): release.tar.gz

LICENSE: ../../LICENSE
    cp $(input) $(output)
include bin.Makeppfile

COPYING.GPL3: ../../COPYING.GPL3
    cp $(input) $(output)

LICENSE_FILES:=LICENSE COPYING.GPL3
SRC:=src.tar.gz

release.tar: ${RELEASE_BINARY_CLI} ${LICENSE_FILES}
    tar --create --dereference --file=$(output) $(inputs)

release.tar.gz: release.tar
    gzip --best --no-name --to-stdout $(input) > $(output)

release.zip: ${RELEASE_BINARY_CLI} ${LICENSE_FILES}
    @if [ -e $(output) ]; then echo rm $(output); rm $(output); fi
    zip -9 $(output) $(inputs)
