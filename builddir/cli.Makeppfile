# Where our sources are
repository ../../src

CXXFLAGS+= --std=c++11 -I../../libs/pstreams
IDLIB=-L. -l${RELEASE_LIBRARY_SHORT}

$(phony CLI3): ${RELEASE_BINARY_CLI3}
$(phony LIB): ${RELEASE_LIBRARY}

LIBS+=-lboost_program_options

makepp_percent_subdirs=1
%.o: %.cpp
    $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $(input) -o $(output)

${RELEASE_BINARY_CLI2}: $(infer_objects CLI2/iteratedecks-cli.o, CLI2/*.o CORE/*.o)
    ${CXX} ${inputs} ${LDFLAGS} ${LDLIBS} ${LIBS} -o ${output}

CLI3_OBJECTS=$(wildcard CLI3/*.o)
#CLI3_OBJECTS=$(infer_objects CLI3/iteratedecks-cli3.o, CLI3/*.o)

${RELEASE_BINARY_CLI3}: ${CLI3_OBJECTS} ${RELEASE_LIBRARY}
    ${CXX} \
    CLI3/iteratedecks-cli3.o CLI3/optionParser.o CLI3/commands.o CLI3/runCommand.o \    
    ${CLI3_OBJECTS} \
    ${LDFLAGS} \
    ${LDLIBS} ${LIBS} \
    ${IDLIB} \
    -o ${output}

${RELEASE_LIBRARY}: $(wildcard CORE/*.o)
    rm -f ${output}
    ${AR} crvs ${output} ${inputs}

${UNIT_TEST_BINARY}: $(wildcard UNIT_TESTS/*.o) ${RELEASE_LIBRARY}
    ${CXX} \
    $(wildcard UNIT_TESTS/*.o) \
    ${LDFLAGS} \
    -l${RELEASE_LIBRARY_SHORT} -L. \
    -lboost_unit_test_framework \
    -o ${output}

GIT_HASH;=$(shell git rev-parse HEAD)

VERSION.h:
    echo -n "#define ITERATEDECKS_VERSION " > ${output}
    echo "\"${GIT_HASH}\"" >> ${output}
    echo -n "#define ITERATEDECKS_DIRTY_HEAD " >> ${output}
    @if [ `git diff HEAD | wc --chars` -gt 0 ]; then \
        echo true >> ${output}; \
    else \
        echo false >> ${output}; \
    fi


#$(phony PACKAGE): release.tar.gz
#
#LICENSE: ../../LICENSE
#    cp $(input) $(output)
#include bin.Makeppfile
#
#COPYING.GPL3: ../../COPYING.GPL3
#    cp $(input) $(output)
#
#LICENSE_FILES:=LICENSE COPYING.GPL3
#SRC:=src.tar.gz
#
#release.tar: ${RELEASE_BINARY_CLI} ${LICENSE_FILES}
#    tar --create --dereference --file=$(output) $(inputs)
#
#release.tar.gz: release.tar
#    gzip --best --no-name --to-stdout $(input) > $(output)
#
#release.zip: ${RELEASE_BINARY_CLI} ${LICENSE_FILES}
#    @if [ -e $(output) ]; then echo rm $(output); rm $(output); fi
#    zip -9 $(output) $(inputs)
